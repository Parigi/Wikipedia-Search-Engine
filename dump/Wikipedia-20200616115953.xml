<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.10/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.10/ http://www.mediawiki.org/xml/export-0.10.xsd" version="0.10" xml:lang="en">
  <siteinfo>
    <sitename>Wikipedia</sitename>
    <dbname>enwiki</dbname>
    <base>https://en.wikipedia.org/wiki/Main_Page</base>
    <generator>MediaWiki 1.35.0-wmf.36</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">Wikipedia</namespace>
      <namespace key="5" case="first-letter">Wikipedia talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="100" case="first-letter">Portal</namespace>
      <namespace key="101" case="first-letter">Portal talk</namespace>
      <namespace key="108" case="first-letter">Book</namespace>
      <namespace key="109" case="first-letter">Book talk</namespace>
      <namespace key="118" case="first-letter">Draft</namespace>
      <namespace key="119" case="first-letter">Draft talk</namespace>
      <namespace key="446" case="first-letter">Education Program</namespace>
      <namespace key="447" case="first-letter">Education Program talk</namespace>
      <namespace key="710" case="first-letter">TimedText</namespace>
      <namespace key="711" case="first-letter">TimedText talk</namespace>
      <namespace key="828" case="first-letter">Module</namespace>
      <namespace key="829" case="first-letter">Module talk</namespace>
      <namespace key="2300" case="first-letter">Gadget</namespace>
      <namespace key="2301" case="first-letter">Gadget talk</namespace>
      <namespace key="2302" case="case-sensitive">Gadget definition</namespace>
      <namespace key="2303" case="case-sensitive">Gadget definition talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>BASIC</title>
    <ns>0</ns>
    <id>4015</id>
    <revision>
      <id>960755859</id>
      <parentid>960723607</parentid>
      <timestamp>2020-06-04T18:51:32Z</timestamp>
      <contributor>
        <username>Charmk</username>
        <id>32729403</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="47937" xml:space="preserve">{{short description|Family of programming languages}}
{{other uses}}
{{Use mdy dates|date=March 2018}}
{{Infobox programming language
| screenshot             = AtariBasic.png
| screenshot caption     = [[Atari BASIC]] (1979) for the [[Atari 8-bit family]]
| paradigm               = [[Non-structured programming|Non-structured]], later [[Procedural programming|procedural]], later [[Object-oriented programming|object-oriented]]
| designers              = {{plainlist|
* [[John G. Kemeny]]
* [[Thomas E. Kurtz]]
}}
| released               = {{Start date and age|1964|5|1}}
| implementations        = {{flatlist|
* [[Dartmouth BASIC]]
* [[Tiny BASIC]]
* [[Applesoft BASIC]]
* [[Atari BASIC]]
* [[Sinclair BASIC]]
* [[Commodore BASIC]]
* [[BBC BASIC]]
* [[TI-BASIC]]
* [[Casio BASIC]]
* [[Microsoft BASIC]]
* [[QB64]]
* [[Liberty BASIC]]
* [[PowerBASIC]]
* [[QBASIC]]
}}
| dialects = 
| influenced by = {{flatlist|
* [[ALGOL 60]]
* [[Fortran|FORTRAN II]]
* [[JOSS]]
}}
| influenced = {{flatlist|
* [[COMAL]]
* Ring,&lt;ref name="The Ring programming language and other languages"&gt;{{cite web |url=http://ring-lang.sourceforge.net/doc1.6/introduction.html#ring-and-other-languages |title=The Ring programming language and other languages |author=Ring Team |date=5 December 2017 |work=ring-lang.net |publisher=[[ring-lang]]}}&lt;/ref&gt;
* [[Visual Basic]]
* [[Visual Basic .NET]]
* [[GRASS (programming language)|GRASS]]
* [[AutoIt]]
* [[AutoHotkey]]
* [[Atari 2600 homebrew#Batari Basic|batari Basic]]
}}
| wikibooks              = BASIC Programming
}}

'''BASIC''' ('''Beginners' All-purpose Symbolic Instruction Code'''&lt;ref&gt;{{Cite book|url=http://bitsavers.trailing-edge.com/pdf/dartmouth/BASIC_Oct64.pdf|title=Basic: a manual for BASIC, the elementary algebraic language designed for use with the Dartmouth Time Sharing System|last=Kemeny|first=John G.|last2=Kurtz|first2=Thomas E.|date=1964|publisher=Dartmouth College Computation Center|location=Hanover, N.H.|language=English|edition=1st}}&lt;/ref&gt; or '''Beginners All-purpose Symbolic Instruction Code'''&lt;ref&gt;Adamson, Tom; "Structured BASIC Applied to Technology" (1988) Merrill Publishing Company, Dayton, Ohio. {{ISBN|0-675-20772-X}}&lt;/ref&gt;) is a family of [[General-purpose programming language|general-purpose]], [[high-level programming language]]s whose design philosophy emphasizes ease of use. The original version was designed by [[John G. Kemeny]] and [[Thomas E. Kurtz]] and released at [[Dartmouth College]] in 1964. They wanted to enable students in fields other than science and mathematics to use computers. At the time, nearly all use of computers required writing custom software, which was something only [[scientist]]s and [[mathematician]]s tended to learn.

In addition to the language itself, Kemeny and Kurtz developed the [[Dartmouth Time Sharing System]] (DTSS), which allowed multiple users to edit and run BASIC programs at the same time. This general model became very popular on [[minicomputer]] systems like the [[PDP-11]] and [[Data General Nova]] in the late 1960s and early 1970s. [[Hewlett-Packard]] produced an entire computer line for this method of operation, introducing the [[HP2000]] series in the late 1960s and continuing sales into the 1980s. Many early video games trace their history to one of these versions of BASIC.

The emergence of early [[microcomputer]]s in the mid-1970s led to the development of a number of BASIC dialects, including [[Microsoft BASIC]] in 1975. Due to the tiny [[main memory]] available on these machines, often 4&amp;nbsp;kB, a variety of [[Tiny BASIC]] dialects was also created. BASIC was available for almost any system of the era, and naturally became the ''de facto'' programming language for the [[home computer]] systems that emerged in the late 1970s. These machines almost always had a BASIC interpreter installed by default, often in the machine's [[firmware]] or sometimes on a [[read only memory|ROM]] cartridge.

BASIC fell from use during the later 1980s as newer machines with far greater capabilities came to market and other programming languages (such as [[Pascal (programming language)|Pascal]] and [[C (programming language)|C]]) became tenable. In 1991, [[Microsoft]] released [[Visual Basic]], combining a greatly updated version of BASIC with a [[Graphical user interface builder|visual forms builder]]. This reignited use of the language and "VB" remains a major programming language in the form of [[Visual Basic .NET|VB.NET]].

==Origin==
[[John G. Kemeny]] was the math department chairman at Dartmouth College. Based largely on his reputation as an innovator in math teaching, in 1959 the school won an [[Alfred P. Sloan Foundation]] award for $500,000 to build a new department building.&lt;ref&gt;{{cite magazine |url=http://content.time.com/time/subscriber/article/0,33009,825616,00.html |title= High Math at Hanover |date=23 February 1959 |magazine=Time}}&lt;/ref&gt; [[Thomas E. Kurtz]] had joined the department in 1956, and from the 1960s Kemeny and Kurtz agreed on the need for programming literacy among students outside the traditional STEM fields. Kemeny later noted that "Our vision was that every student on campus should have access to a computer, and any faculty member should be able to use a computer in the classroom whenever appropriate. It was as simple as that."{{sfn|Time|2014}}

Kemeny and Kurtz had made two previous experiments with simplified languages, [[DARSIMCO]] (Dartmouth Simplified Code) and DOPE (Dartmouth Oversimplified Programming Experiment). These did not progress past a single freshman class. New experiments using [[Fortran]] and [[ALGOL]] followed, but Kurtz concluded these languages were too tricky for what they desired. As Kurtz noted, Fortran had numerous oddly-formed commands, notably an "almost impossible-to-memorize convention for specifying a loop: 'DO 100, I = 1, 10, 2'. Is it '1, 10, 2' or '1, 2, 10', and is the comma after the line number required or not?"{{sfn|Time|2014}}

Moreover, the lack of any sort of immediate feedback was a key problem; the machines of the era used [[batch processing]] and took a long time to complete a run of a program. Kurtz suggested that [[time-sharing]] offered a solution; a single machine could divide up its processing time among many users, giving them the illusion of having a slow computer to themselves. Small programs would return results in a few seconds. This led to increasing interest in a system using time-sharing and a new language specifically for use by non-STEM students.{{sfn|Time|2014}}

Kemeny wrote the first version of BASIC. The [[acronym]] ''BASIC'' comes from the name of an unpublished paper by Thomas Kurtz.&lt;ref&gt;{{Cite web|url=http://www.catb.org/jargon/html/B/BASIC.html|title=BASIC|website=[[Jargon File]]|access-date=June 13, 2017}}&lt;/ref&gt; The new language was heavily patterned on FORTRAN II; statements were one-to-a-line, numbers were used to indicate the target of loops and branches, and many of the commands were similar or identical. However, the [[Syntax (programming languages)|syntax]] was changed wherever it could be improved. For instance, the difficult to remember &lt;code&gt;DO&lt;/code&gt; loop was replaced by the much easier to remember &lt;code&gt;FOR I = 1 TO 10 STEP 2&lt;/code&gt;, and the line number used in the DO was instead indicated by the &lt;code&gt;NEXT I&lt;/code&gt;.{{efn|Fortran's DO had a &lt;code&gt;continue&lt;/code&gt; for this purpose, but still required the line number to be entered.}} Likewise, the cryptic &lt;code&gt;IF&lt;/code&gt; statement of Fortran, whose syntax matched a particular instruction of the machine on which it was originally written, became the simpler &lt;code&gt;IF I=5 THEN GOTO 100&lt;/code&gt;. These changes made the language much less idiosyncratic while still having an overall structure and feel similar to the original FORTRAN.{{sfn|Time|2014}}

The project received a $300,000 grant from the [[National Science Foundation]], which was used to purchase a [[GE-225]] computer for processing, and a Datanet-30 realtime processor to handle the [[Teletype Model 33]] [[teleprinter]]s used for input and output. A team of a dozen undergraduates worked on the project for about a year, writing both the DTSS system and the BASIC compiler.{{sfn|Time|2014}} The main CPU was later replaced by a GE-235,{{sfn|Time|2014}} and still later by a GE-635.

The first version BASIC language was released on 1 May 1964.&lt;ref&gt;{{Cite web|url=http://cis-alumni.org/TKurtz.html|title=Thomas E. Kurtz – History of Computer Programming Languages|website=cis-alumni.org|language=en|access-date=June 13, 2017}}&lt;/ref&gt;&lt;ref&gt;{{cite magazine|url=https://www.wired.com/2008/05/dayintech-0501-2/|title=May 1, 1964: First Basic Program Runs|last=Alfred|first=Randy|magazine=[[Wired (magazine)|Wired]]|date=January 5, 2008|access-date=June 13, 2017}}&lt;/ref&gt;

One of the graduate students on the implementation team was [[Mary Kenneth Keller]], one of the first people in the United States to earn a Ph.D. in computer science and the first woman to do so.&lt;ref&gt;{{Cite journal|last=Gurer|first=Denise|date=January 1995|title=Pioneering women in computer science|url=|journal=Communications of the ACM|volume= 38| issue = 1|pages=45–54|doi=10.1145/204865.204875}}&lt;/ref&gt;

Initially, BASIC concentrated on supporting straightforward mathematical work, with [[matrix (mathematics)|matrix]] arithmetic support from its initial implementation as a batch language, and [[character string]] functionality being added by 1965.
Wanting use of the language to become widespread, its designers made the compiler available free of charge. (In the 1960s, software became a chargeable commodity; until then, it was provided without charge as a service with the very expensive computers, usually available only to lease.) They also made it available to high schools in the [[Hanover, New Hampshire]] area and regionally throughout New England on Teletype Model 33 and Model 35 teleprinter terminals connected to Dartmouth via dial-up phone lines, and they put considerable effort into promoting the language. In the following years, as other dialects of BASIC appeared, Kemeny and Kurtz's original BASIC dialect became known as ''[[Dartmouth BASIC]]''.

New Hampshire recognized the accomplishment in 2019 when it erected a highway historical marker recognizing the creation of BASIC.&lt;ref name = "Brooks, Concord Monitor, 2019" &gt;{{ Cite web | url = https://granitegeek.concordmonitor.com/2019/06/11/finally-a-historical-marker-that-talks-about-something-important/ | title = Finally, a historical marker that talks about something important | access-date = 11 August 2019 | first = David | last = Brooks | date = 11 June 2019 | website = [[Concord Monitor]] | archive-url = https://web.archive.org/web/20190611180750/https://granitegeek.concordmonitor.com/2019/06/11/finally-a-historical-marker-that-talks-about-something-important/ | archive-date = 11 June 2019  | df = dmy-all }}&lt;/ref&gt;

==Spread on minicomputers==
[[File:Pn-pravez-class-5.jpg|thumb|right|"Train Basic every day!"—reads a poster (bottom center) in a Russian school (c. 1985–1986).]]

BASIC, by its very nature of being small, was naturally suited to porting to the newly emerging [[minicomputer]] market. These machines had very small [[main memory]], perhaps as little as 4&amp;nbsp;kB in modern terminology,{{efn|Perhaps the most famous mini of the era is the PDP-8, who's 12-bit memory space allowed 4,096 address of 12-bits each, or 6,144 bytes.}} and lacked high-performance storage like [[hard drive]]s that make compilers practical. Interpreters for BASIC on these platforms thus became the norm.

A particularly important example was [[HP Time-Shared BASIC]], which, like the original Dartmouth system, used two computers working together to implement a timesharing system. One, a low-end machine in the [[HP 2100]] series, was used to control user input and save and load their programs. The other, a high-end version of the same underlying machine, ran the programs and generated output. For the low-low cost of about $100,000, one could own a machine capable of running between 16 and 32 users at the same time.&lt;ref name=ts&gt;{{Cite web |url=https://www.hpmuseum.net/display_item.php?hw=411 |title= 2000 Timeshare System}}&lt;/ref&gt; The system, bundled as the HP 2000, was the first mini platform to offer timesharing and was an immediate runaway success, catapulting HP to become the third-largest vendor in the minicomputer space, behind [[Digital Equipment Corporation|DEC]] and [[Data General]] (DG).&lt;ref&gt;{{Cite magazine |url=http://hpmemoryproject.org/news/tenyears_comp/measure_page_00.htm |title= Passing the 10-year mark |magazine= MEASURE Magazine |date= October 1976 |publisher= Hewlett Packard}}&lt;/ref&gt; This cemented BASIC as the language of choice for the timesharing market from large to small.

DEC initially ignored BASIC. This was due to their work with [[RAND Corporation]], who had purchased a [[PDP-6]] to run their [[JOSS]] language, which was conceptually very similar to BASIC.&lt;ref&gt;{{cite techreport |title=The JOSS Years: Reflections on an experiment |last=Marks |first=Shirley
|date=December 1971 |publisher=Rand |url=https://www.rand.org/content/dam/rand/pubs/reports/2008/R918.pdf}}&lt;/ref&gt; This led DEC to introduce a smaller, cleaned up version of JOSS known as [[FOCAL (programming language)|FOCAL]], which they heavily promoted in the late 1960s. However, with timesharing systems widely offering BASIC, and all of their competition in the minicomputer space doing the same, customers were clamouring for BASIC. After management repeatedly ignored their pleas, [[David H. Ahl]] took it upon himself to buy a BASIC for the [[PDP-8]], which was a major success in the education market. By the early 1970s, FOCAL and JOSS had been forgotten and BASIC had become almost universal in the minicomputer market.&lt;ref&gt;{{cite interview |first=Kevin |last=Savetz |date=April 2013 |title=Dave Ahl and Betsy Ah |url=https://computingpioneers.com/index.php?title=Dave_Ahl_and_Betsy_Ahl}}&lt;/ref&gt; DEC would go on to introduce their updated version, [[BASIC-PLUS]], for use on the [[RSTS/E]] time-sharing operating system.

During this period a number of simple [[text-based game]]s were written in BASIC, most notably Mike Mayfield's ''[[Star Trek (text game)|Star Trek]]''. David Ahl collected these, some ported from FOCAL, and published them in an educational newsletter he compiled. He later collected a number of these into book form, ''101 BASIC Computer Games'', published in 1973.&lt;ref name="basicgames"&gt;{{Cite book|url=http://www.atariarchives.org/basicgames/|title=101 Basic computer games|last=Ahl|first=David H.|date=1973|publisher=Creative Computing Press|location=Morristown, N.J. |language=English|oclc=896774158}}&lt;/ref&gt; During the same period, Ahl was involved in the creation of a small computer for education use, an early [[personal computer]]. When management refused to support the concept, Ahl left DEC in 1974 to found the seminal computer magazine, ''[[Creative Computing (magazine)|Creative Computing]]''. The book remained popular, and was re-published on several occasions.&lt;ref&gt;{{Cite magazine|last=Ahl|first=David H.|date=May 11, 1981|title=Computer Games|url=https://books.google.com/books?id=Cz4EAAAAMBAJ&amp;pg=PA44|magazine=[[InfoWorld]]|issn=0199-6649|volume=3|issue=9|page=44}}&lt;/ref&gt;

==Explosive growth: the home computer era==

[[File:CommodoreBasic.png|thumb|[[Commodore BASIC]] v2.0 on the [[Commodore 64]]]]
[[File:Msxbasic.png|thumb|[[MSX BASIC]] version 3.0]]
The introduction of the first [[microcomputer]]s in the mid-1970s was the start of explosive growth for BASIC. It had the advantage that it was fairly well known to the young designers and computer hobbyists who took an interest in microcomputers. Despite [[Edsger W. Dijkstra|Dijkstra]]'s famous judgement in 1975, "It is practically impossible to teach good programming to students that have had a prior exposure to BASIC: as potential programmers they are mentally mutilated beyond hope of regeneration",&lt;ref&gt;{{Cite book|chapter-url=https://www.cs.utexas.edu/users/EWD/ewd04xx/EWD498.PDF|chapter=How do we tell truths that might hurt|title=Selected Writings on Computing: A Personal Perspective|first=Edsger W.|last=Dijkstra|date=June 18, 1975|publication-date=1982|publisher=[[Springer-Verlag]]|isbn=978-0387906522|oclc=693424350|pages=[https://archive.org/details/selectedwritings0000dijk/page/129 129–131]|url=https://archive.org/details/selectedwritings0000dijk/page/129}}&lt;/ref&gt; BASIC was one of the few languages that was both high-level enough to be usable by those without training and small enough to fit into the microcomputers of the day, making it the de facto standard programming language on early microcomputers.

The first microcomputer version of BASIC was co-written by Gates, Allen, and [[Monte Davidoff]] for their newly-formed company, Micro-Soft. This was released by MITS in [[punch tape]] format for the [[Altair 8800]] shortly after the machine itself,&lt;ref&gt;{{Cite web|title=We have a BASIC|publisher=[[New Mexico Museum of Natural History and Science]]|url=http://startup.nmnaturalhistory.org/gallery/story.php?ii=20&amp;sid=4|access-date=April 18, 2007|archiveurl=https://web.archive.org/web/20121130051115/http://startup.nmnaturalhistory.org/gallery/story.php?ii=20&amp;sid=4|archivedate=November 30, 2012}}&lt;/ref&gt; immediately cementing BASIC as the primary language of early microcomputers. Members of the [[Homebrew Computer Club]] began circulating copies of the program, causing Gates to write his [[Open Letter to Hobbyists]], complaining about this early example of [[software piracy]].

Partially in response, [[Bob Albrecht]] urged [[Dennis Allison]] to write their own variation of the language. Albrecht had seen BASIC on [[minicomputer]]s and felt it would be the perfect match for new machines. How to design and implement a stripped-down version of an [[interpreter (computer software)|interpreter]] for the BASIC language was covered in articles by Allison in the first three quarterly issues of the ''[[People's Computer Company]]'' newsletter published in 1975 and implementations with source code published in ''[[Dr. Dobb's Journal of Tiny BASIC Calisthenics &amp; Orthodontia: Running Light Without Overbyte]]''. This led to a wide variety of versions with added features or other improvements, with versions from Tom Pittman and [[Li-Chen Wang]] becoming particularly well known.&lt;ref&gt;{{Cite web |url=http://www.ittybittycomputers.com/IttyBitty/iNotes.html#TinyBasic|title=you had to pay $5 up front to get it… |last=Pittman |first=Tom |website=www.ittybittycomputers.com |access-date=June 14, 2017}}&lt;/ref&gt;

Micro-Soft, by this time [[Microsoft]], ported their interpreter for the [[MOS 6502]], which quickly become one of the most popular microprocessors of the 8-bit era. When new microcomputers began to appear, notably the "1977 trinity" of the [[TRS-80]], [[Commodore PET]] and [[Apple II]], they either included a version of the MS code, or quickly introduced new models with it. By 1978, MS BASIC was a ''de facto'' standard and practically every [[home computer]] of the 1980s included it in [[read-only memory|ROM]]. Upon boot, a BASIC interpreter in [[direct mode]] was presented.

[[Commodore Business Machines]] included [[Commodore BASIC]], based on Microsoft BASIC. The Apple II and TRS-80 each had two versions of BASIC, a smaller introductory version introduced with the initial releases of the machines and a more advanced version developed as interest in the platforms increased. As new companies entered the field, additional versions were added that subtly changed the BASIC family. The [[Atari 8-bit family]] had its own [[Atari BASIC]] that was modified in order to fit on an 8&amp;nbsp;kB ROM cartridge. [[Sinclair BASIC]] was introduced in 1980 with the [[Sinclair ZX-80]], and was later extended for the [[Sinclair ZX-81]] and the [[Sinclair ZX Spectrum]]. The [[BBC]] published [[BBC BASIC]], developed by [[Acorn Computers Ltd]], incorporating many extra [[structured programming]] keywords and advanced floating-point operation features.

As the popularity of BASIC grew in this period, computer magazines published complete source code in BASIC for video games, utilities, and other programs. Given BASIC's straightforward nature, it was a simple matter to [[Type-in program|type in the code]] from the magazine and execute the program. Different magazines were published featuring programs for specific computers, though some BASIC programs were considered universal and could be used in machines running any variant of BASIC (sometimes with minor adaptations). Many books of type-in programs were also available, and in particular, Ahl published versions of the original 101 BASIC games converted into the Microsoft dialect and published it from ''Creative Computing'' as ''[[BASIC Computer Games]]''. This book, and its sequels, provided hundreds of ready-to-go programs that could be easily converted to practically any BASIC-running platform.&lt;ref name="basicgames" /&gt;&lt;ref&gt;{{Cite book|url=http://www.atariarchives.org/morebasicgames/|title=More basic computer games|last=Ahl|first=David H.|date=1979|publisher=Creative Computing Press|isbn=978-0894801372|oclc=839377789|location=Morristown|language=English}}&lt;/ref&gt;&lt;ref&gt;{{Cite book|url=http://www.atariarchives.org/bigcomputergames/|title=Big computer games|last=Ahl|first=David H.|date=1984|publisher=Creative Computing Press|isbn=978-0916688400|oclc=872675092|location=Morris Plains, N.J.|language=English}}&lt;/ref&gt; The book reached the stores in 1978, just as the [[home computer]] market was starting off, and it became the first million-selling computer book. Later packages, such as [[Learn to Program BASIC]] would also have gaming as an introductory focus. On the business-focused [[CP/M]] computers which soon became widespread in small business environments, [[Microsoft BASIC]] ([[MBASIC]]) was one of the leading applications.&lt;ref name="oldcomputer"&gt;{{Cite web|url=http://oldcomputers.net/osborne-1.html|title=Osborne 1|website=oldcomputers.net|access-date=June 14, 2017}}&lt;/ref&gt;

==IBM PC and compatibles==

[[File:IBM Cassette BASIC.png|thumb|[[IBM Cassette BASIC]] 1.10]]

When IBM was designing the [[IBM PC]] they followed the paradigm of existing home computers in wanting to have a built-in BASIC. They sourced this from Microsoft – [[IBM Cassette BASIC]] – but Microsoft also produced several other versions of BASIC for [[MS-DOS]]/[[PC DOS]] including [[IBM Disk BASIC]] (BASIC D), [[IBM BASICA]] (BASIC A), [[GW-BASIC]] (a BASICA-compatible version that did not need IBM's ROM) and [[QBasic]], all typically bundled with the machine. In addition they produced the Microsoft BASIC Compiler aimed at professional programmers. Turbo [[Pascal (programming language)|Pascal]]-publisher [[Borland]] published [[Turbo Basic]] 1.0 in 1985 (successor versions are still being marketed by the original author under the name [[PowerBASIC]]). Microsoft wrote the windowed [[AmigaBASIC]] that was supplied with version 1.1 of the pre-emptive multitasking GUI Amiga computers (late 1985 / early 1986), although the product unusually did not bear any Microsoft marks.

These later variations introduced many extensions, such as improved [[string manipulation]] and graphics support, access to the [[file system]] and additional [[data type]]s. More important were the facilities for [[structured programming]], including additional [[control structures]] and proper [[subroutine]]s supporting [[local variable]]s. However, by the latter half of the 1980s, users were increasingly using pre-made applications written by others rather than learning programming themselves; while professional programmers now had a wide range of more advanced languages available on small computers. [[C (programming language)|C]] and later [[C++]] became the languages of choice for professional [[Shrink wrap contract|"shrink wrap"]] application development.&lt;ref&gt;{{Cite book|url=https://books.google.com/books?id=lGRpeBZQYPoC|title=The Class Of Java|last=Pravin|first=Jain|date=2011|publisher=Pearson Education India|isbn=9788131755440|language=en}}&lt;/ref&gt;&lt;ref&gt;{{Cite web|url=http://www.fysh.org/~zefram/gne/c_programming_language/|title=GNE: the C programming language|website=fysh.org|access-date=June 14, 2017|quote=During the 1980s, C compilers spread widely, and C became an extremely popular language.}}&lt;/ref&gt;

==Visual Basic==

In 1991 Microsoft introduced  [[Visual Basic]], an evolutionary development of QuickBasic. It included constructs from that language such as block-structured control statements, parameterized subroutines and optional [[Type system#STATIC|static typing]] as well as [[object oriented language|object-oriented]] constructs from other languages such as "With" and "For Each". The language retained some compatibility with its predecessors, such as the Dim keyword for declarations, "Gosub"/Return statements and optional line numbers which could be used to locate errors. An important driver for the development of Visual Basic was as the new [[macro language]] for [[Microsoft Excel]], a [[spreadsheet]] program. To the surprise of many at Microsoft who still initially marketed it as a language for hobbyists, the language came into widespread use for small custom business applications shortly after the release of VB version 3.0, which is widely considered the first relatively stable version.

While many advanced programmers still scoffed at its use, VB met the needs of [[small business]]es efficiently as by that time, computers running Windows 3.1 had become fast enough that many business-related processes could be completed "in the blink of an eye" even using a "slow" language, as long as large amounts of data were not involved. Many small business owners found they could create their own small, yet useful applications in a few evenings to meet their own specialized needs. Eventually, during the lengthy lifetime of VB3, knowledge of Visual Basic had become a marketable job skill. Microsoft also produced [[VBScript]] in 1996 and [[Visual Basic .NET]] in 2001. The latter has essentially the same power as [[C Sharp (programming language)|C#]] and [[Java (programming language)|Java]] but with syntax that reflects the original Basic language.
[[File:TriBasicExample.png|thumb|Three modern Basic variants: [[Mono (software)|Mono]] Basic, [[OpenOffice.org Basic]] and [[Gambas]]]]

==Basic4X (B4X)==
B4X is a suite of rapid application development IDE that allows the creation of applications for various platforms using BASIC-like (or VB-like) language. The 'X' in the name may stand for 'cross platform'. The suite comprises: '''B4A''' (Basic4Android) for creating Android applications; '''B4i''' (Basic4IOS) for creating applications for ipads/iphones; '''B4J''' (Basic4Java) for creating java-based applications that can run on Windows, Mac, Linux and ARM boards (such as Raspberry Pi); and '''B4R''' (Basic4aRduino) for creating IOT applications on arduino boards. B4X products are free except B4i. [see [[B4X|main article]]]  


== Post-1990 versions and dialects ==

Many other BASIC dialects have also sprung up since 1990, including the [[Open-source software|open source]] [[QB64]] and [[FreeBASIC]], inspired by QBasic, and the Visual Basic-styled [[RapidQ]], [[Basic For Qt]] and [[Gambas]]. Modern commercial incarnations include [[PureBasic]], [[PowerBASIC]], [[Xojo]], Monkey X and [[True BASIC]] (the direct successor to Dartmouth BASIC from a company controlled by Kurtz).

Several web-based simple BASIC interpreters also now exist, including [http://www.quitebasic.com/ Quite BASIC] and Microsoft's [[Microsoft Small Basic|Small Basic]]. Many versions of BASIC are also now available for  [[smartphone]]s and tablets via the Apple [[App Store (iOS)|App Store]], or [[Google Play]] store for Android. On game consoles, an application for the [[Nintendo 3DS]] and [[Nintendo DSi]] called ''[[Petit Computer]]'' allows for programming in a slightly modified version of BASIC with DS button support.

==Calculators==

Variants of BASIC are available on graphing and otherwise [[programmable calculator]]s made by [[Texas Instruments]], HP, Casio, and others.

==Windows command line==

[[QBasic]], a version of Microsoft [[QuickBASIC]] without the linker to make EXE files, is present in the [[Windows NT]] and DOS-[[Windows 95]] streams of operating systems and can be obtained for more recent releases like [[Windows 7]] which do not have them. Prior to DOS 5, the Basic interpreter was [[GW-BASIC|GW-Basic]]. QuickBasic is part of a series of three languages issued by Microsoft for the home and office power user and small-scale professional development; QuickC and QuickPascal are the other two. For [[Windows 95]] and 98, which do not have QBasic installed by default, they can be copied from the installation disc, which will have a set of directories for old and optional software; other missing commands like Exe2Bin and others are in these same directories.

==Other==

[[File:Nintendo-Famicom-Family-Basic-Keyboard-wCart.jpg|thumb|right|BASIC came to some video game systems, such as the Nintendo [[Nintendo Entertainment System|Famicom]].]]
The various Microsoft, Lotus, and Corel office suites and related products are programmable with Visual Basic in one form or another, including [[LotusScript]], which is very similar to VBA 6. The Host Explorer terminal emulator uses WWB as a macro language; or more recently the programme and the suite in which it is contained is programmable in an in-house Basic variant known as Hummingbird Basic. The VBScript variant is used for programming web content, Outlook 97, Internet Explorer, and the Windows Script Host. WSH also has a [[Visual Basic for Applications]] (VBA) engine installed as the third of the default engines along with VBScript, JScript, and the numerous proprietary or open source engines which can be installed like [[PerlScript]], a couple of Rexx-based engines, Python, Ruby, Tcl, Delphi, XLNT, PHP, and others; meaning that the two versions of Basic can be used along with the other mentioned languages, as well as LotusScript, in a WSF file, through the component object model, and other WSH and VBA constructions. VBScript is one of the languages that can be accessed by the 4Dos, 4NT, and Take Command enhanced shells. SaxBasic and WWB are also very similar to the Visual Basic line of Basic implementations. The pre-Office 97 macro language for Microsoft Word is known as [[WordBASIC]]. Excel 4 and 5 use Visual Basic itself as a macro language. [[Chipmunk Basic]], an old school interpreter similar to BASICs of the 1970s, is available for [[Linux]], [[Microsoft Windows]] and [[macOS]].

==Nostalgia==

The ubiquity of BASIC interpreters on personal computers was such that textbooks once included simple "Try It In BASIC" exercises that encouraged students to experiment with mathematical and computational concepts on classroom or home computers. Popular computer magazines of the day typically included [[type-in program]]s.

Futurist and sci-fi writer [[David Brin]] mourned the loss of ubiquitous BASIC in a 2006 ''Salon'' article&lt;ref&gt;{{Cite web|url=https://www.salon.com/2006/09/14/basic_2/|archive-url=https://web.archive.org/web/20130918213750/http://www.salon.com/2006/09/14/basic_2/singleton/|archive-date=September 18, 2013|url-status=dead|title=Why Johnny Can't Code|last=Brin|first=David|date=September 14, 2006|website=[[Salon (website)|Salon]]|access-date=2017-06-19}}&lt;/ref&gt; as have others who first used computers during this era. In turn, the article prompted Microsoft to develop and release [[Microsoft Small Basic|Small Basic]].&lt;ref&gt;{{Cite web|url=http://msdn.microsoft.com/en-us/beginner/hh182234.aspx|archive-url=https://web.archive.org/web/20140317001756/http://msdn.microsoft.com/en-us/beginner/hh182234.aspx|archive-date=March 17, 2014|url-status=dead|title=Small Basic|website=[[Microsoft Developer Network]]|access-date=June 19, 2017}}&lt;/ref&gt; Dartmouth held a 50th anniversary celebration for BASIC on 1 May 2014,&lt;ref&gt;{{Cite news|url=http://www.unionleader.com/apps/pbcs.dll/article?AID=/20140429/NEWS04/140429054|title=Dartmouth plans celebration for 50th anniversary of BASIC computer language|newspaper=[[New Hampshire Union Leader]]|date=April 28, 2014|access-date=June 14, 2017}}&lt;/ref&gt; as did other organisations; at least one organisation of VBA programmers organised a 35th anniversary observance in 1999.&lt;ref&gt;{{Cite web|url=https://www.google.com/search?q=50th+anniversary+of+BASIC|title=50th anniversary of BASIC – Google Search|website=[[Google]]}}&lt;/ref&gt;

Dartmouth College celebrated the 50th anniversary of the BASIC language with a day of events&lt;ref&gt;{{Cite web|url=https://www.dartmouth.edu/basicfifty/events.html|title=BASIC at 50 – Event Schedule|publisher=[[Dartmouth College]]|language=en|access-date=June 14, 2017}}&lt;/ref&gt; on April 30, 2014. A short documentary film was produced for the event.&lt;ref&gt;{{Cite web|url=https://www.dartmouth.edu/basicfifty/|title=BASIC at 50|publisher=[[Dartmouth College]]|language=en|access-date=June 14, 2017}}&lt;/ref&gt;

== Syntax ==
=== Typical BASIC keywords{{Anchor|keywords}} ===
==== Data manipulation ====
; &lt;code&gt;LET&lt;/code&gt; : assigns a value (which may be the result of an [[expression (programming)|expression]]) to a variable.
; &lt;code&gt;DATA&lt;/code&gt; : holds a list of values which are assigned sequentially using the READ command.

==== Program flow control ====
; &lt;code&gt;IF ... THEN ... {ELSE}&lt;/code&gt; : used to perform comparisons or make decisions.
; &lt;code&gt;FOR ... TO ... {STEP} ... NEXT&lt;/code&gt; : repeat a section of code a given number of times. A variable that acts as a counter is available within the [[Control flow#Loops|loop]].
; &lt;code&gt;WHILE ... WEND&lt;/code&gt; and &lt;code&gt;REPEAT ... UNTIL&lt;/code&gt; : repeat a section of code while the specified condition is true. The condition may be evaluated before each iteration of the loop, or after.
; &lt;code&gt;DO ... LOOP {WHILE}&lt;/code&gt; or &lt;code&gt;{UNTIL}&lt;/code&gt; : repeat a section of code indefinitely or while/until the specified condition is true. The condition may be evaluated before each iteration of the loop, or after.
; &lt;code&gt;[[Goto|GOTO]]&lt;/code&gt; : jumps to a numbered or labelled line in the program.
; &lt;code&gt;GOSUB&lt;/code&gt; : jumps to a numbered or labelled line, executes the code it finds there until it reaches a &lt;code&gt;RETURN&lt;/code&gt; command, on which it jumps back to the statement following the &lt;code&gt;GOSUB&lt;/code&gt;, either after a colon, or on the next line. This is used to implement [[subroutine]]s.
; &lt;code&gt;ON ... GOTO/GOSUB&lt;/code&gt; : chooses where to jump based on the specified conditions. See [[Switch statement]] for other forms.
; &lt;code&gt;DEF FN&lt;/code&gt; : a pair of keywords introduced in the early 1960s to define functions. The original BASIC functions were modelled on FORTRAN single-line functions. BASIC functions were one expression with variable arguments, rather than [[subroutine]]s, with a syntax on the model of &lt;code&gt;DEF FND(x) = x*x&lt;/code&gt; at the beginning of a program. Function names were originally restricted to FN, plus one letter, ''i.e.'', FNA, FNB&amp;nbsp;...

==== Input and output ====
; &lt;code&gt;LIST&lt;/code&gt; : displays the full source code of the current program.
; &lt;code&gt;PRINT&lt;/code&gt; : displays a message on the screen or other output device.
; &lt;code&gt;INPUT&lt;/code&gt; : asks the user to enter the value of a variable. The statement may include a prompt message.
; &lt;code&gt;TAB&lt;/code&gt; or &lt;code&gt;AT&lt;/code&gt;: used with &lt;code&gt;PRINT&lt;/code&gt; to set the position where the next character will be shown on the screen or printed on paper.

==== Mathematical functions ====
; &lt;code&gt;ABS&lt;/code&gt; : Absolute value
; &lt;code&gt;ATN&lt;/code&gt; : Arctangent (result in [[radian]]s)
; &lt;code&gt;COS&lt;/code&gt; : Cosine (argument in [[radian]]s)
; &lt;code&gt;EXP&lt;/code&gt; : Exponential function
; &lt;code&gt;INT&lt;/code&gt; : Integer part (typically [[floor function]])
; &lt;code&gt;LOG&lt;/code&gt; : Natural logarithm
; &lt;code&gt;RND&lt;/code&gt; : [[Random number generation]]
; &lt;code&gt;SIN&lt;/code&gt; : Sine (argument in [[radian]]s)
; &lt;code&gt;SQR&lt;/code&gt; : Square root
; &lt;code&gt;TAN&lt;/code&gt; : Tangent (argument in [[radian]]s)

==== Miscellaneous ====
; &lt;code&gt;REM&lt;/code&gt; : holds a programmer's comment or REMark; often used to give a title to the program and to help identify the purpose of a given section of code.
; &lt;code&gt;USR&lt;/code&gt; : transfers program control to a [[Machine code|machine language]] subroutine, usually entered as an alphanumeric [[String (computer science)|string]] or in a list of DATA statements.
; &lt;code&gt;TRON&lt;/code&gt; : turns on display of each line number as it is run ("TRace ON"). This was useful for [[debugging]] or correcting of problems in a program. 
; &lt;code&gt;TROFF&lt;/code&gt; : turns off the display of line numbers.
; &lt;code&gt;ASM&lt;/code&gt; : some compilers such as Freebasic,&lt;ref&gt;{{Cite web|url=http://www.freebasic.net/wiki/wikka.php?wakka=KeyPgAsm|title=KeyPgAsm|website=FreeBasic Wiki|access-date=August 2, 2017}}&lt;/ref&gt; Purebasic,&lt;ref&gt;{{Cite web|url=https://www.purebasic.com/documentation/reference/inlinedasm.html|title=Inline x86 ASM|website=Pure Basic|access-date=August 2, 2017}}&lt;/ref&gt; and Powerbasic&lt;ref&gt;{{Cite web|url=https://www.powerbasic.com/help/pbcc/using_assembly-language_in_your_code.htm|title=Using assembly-language in your code|website=Power Basic|access-date=August 2, 2017|archive-url=https://web.archive.org/web/20170802164032/https://www.powerbasic.com/help/pbcc/using_assembly-language_in_your_code.htm|archive-date=August 2, 2017|url-status=dead}}&lt;/ref&gt; also support [[Inline assembler|inline assembly]] language, allowing the programmer to intermix high-level and low-level code, typically prefixed with "ASM" or "!" statements.

===Data types and variables===
Minimal versions of BASIC had only integer variables and one- or two-letter variable names, which minimized requirements of limited and expensive memory (RAM). More powerful versions had floating-point arithmetic, and variables could be labelled with names six or more characters long. There were some problems and restrictions in early implementations; for example, Applesoft BASIC allowed variable names to be several characters long, but only the first two were significant, thus it was possible to inadvertently write a program with variables "LOSS" and "LOAN", which would be treated as being the same; assigning a value to "LOAN" would silently overwrite the value intended as "LOSS". Keywords could not be used in variables in many early BASICs; "SCORE" would be interpreted as "SC" OR "E", where OR was a keyword. [[String (computer science)|String]] variables are usually distinguished in many microcomputer dialects by having $ suffixed to their name, and values are often identified as strings by being delimited by "double quotation marks". Arrays in BASIC could contain integers, floating point or string variables.

Some dialects of BASIC supported [[matrix (mathematics)|matrices and matrix operations]], useful for the solution of sets of simultaneous linear algebraic equations. These dialects would directly support matrix operations such as assignment, addition, multiplication (of compatible matrix types), and evaluation of a determinant. Many microcomputer BASICs did not support this data type; matrix operations were still possible, but had to be programmed explicitly on array elements.

===Examples===

==== Unstructured BASIC ====
The original Dartmouth Basic was unusual in having a matrix keyword, MAT.{{efn|From version 3 onwards.}} Although not implemented by most later microprocessor derivatives, it is used in this example from the 1968 manual&lt;ref&gt;{{Cite book|url=http://bitsavers.trailing-edge.com/pdf/dartmouth/BASIC_4th_Edition_Jan68.pdf|title=Basic: a manual for BASIC, the elementary algebraic language designed for use with the Dartmouth Time Sharing System|last=Kemeny|first=John G.|last2=Kurtz|first2=Thomas E.|date=January 1968|publisher=Dartmouth College Computation Center|location=Hanover, N.H.|language=English|edition=4th|page=53}}&lt;/ref&gt; which averages the numbers that are input:

&lt;syntaxhighlight lang="gwBasic"&gt;
5 LET S = 0
10 MAT INPUT V 
20 LET N = NUM 
30 IF N = 0 THEN 99 
40 FOR I = 1 TO N 
45 LET S = S + V(I) 
50 NEXT I 
60 PRINT S/N 
70 GO TO 5 
99 END
&lt;/syntaxhighlight&gt;

New BASIC programmers on a home computer might start with a simple program, perhaps using the language's PRINT statement to display a message on the screen; a well-known and often-replicated example is [[The C Programming Language|Kernighan and Ritchie]]'s [["Hello, World!" program]]:

&lt;syntaxhighlight lang="gwBasic"&gt;
10 PRINT "Hello, World!"
20 END
&lt;/syntaxhighlight&gt;

An [[infinite loop]] could be used to fill the display with the message.

Most first-generation BASIC versions, such as [[MSX BASIC]] and [[GW-BASIC]], supported simple data types, loop cycles, and arrays. The following example is written for GW-BASIC, but will work in most versions of BASIC with minimal changes:

&lt;syntaxhighlight lang="gwBasic"&gt;
10 INPUT "What is your name: "; U$
20 PRINT "Hello "; U$
30 INPUT "How many stars do you want: "; N
40 S$ = ""
50 FOR I = 1 TO N
60 S$ = S$ + "*"
70 NEXT I
80 PRINT S$
90 INPUT "Do you want more stars? "; A$
100 IF LEN(A$) = 0 THEN GOTO 90
110 A$ = LEFT$(A$, 1)
120 IF A$ = "Y" OR A$ = "y" THEN GOTO 30
130 PRINT "Goodbye "; U$
140 END
&lt;/syntaxhighlight&gt;
The resulting dialog might resemble:

 What is your name: Mike
 Hello Mike
 How many stars do you want: 7
 *******
 Do you want more stars? yes
 How many stars do you want: 3
 ***
 Do you want more stars? no
 Goodbye Mike

==== Structured BASIC ====
Second-generation BASICs (for example, [[HP BASIC for OpenVMS|VAX Basic]], [[SuperBASIC]], [[True BASIC]], [[QuickBASIC]], [[BBC BASIC]], [[Pick operating system|Pick BASIC]], [[PowerBASIC]], [[Liberty BASIC]] and (arguably) [[COMAL]]) introduced a number of features into the language, primarily related to structured and procedure-oriented programming. Usually, [[line number]]ing is omitted from the language and replaced with [[label (computer science)|labels]] (for [[GOTO]]) and [[subroutine|procedures]] to encourage easier and more flexible design.&lt;ref name="GBvsQB"&gt;{{cite web|url=http://support.microsoft.com/kb/73084|title=Differences Between GW-BASIC and QBasic|date=2003-05-12|accessdate=2008-06-28|author=|archiveurl=https://web.archive.org/web/20131019181140/http://support.microsoft.com/kb/73084|archivedate=2013-10-19}}&lt;/ref&gt; In addition keywords and structures to support repetition, selection and procedures with local variables were introduced.

The following example is in Microsoft QuickBASIC:

&lt;syntaxhighlight lang="QBasic"&gt;
REM QuickBASIC example

REM Forward declaration - allows the main code to call a
REM    subroutine that is defined later in the source code
DECLARE SUB PrintSomeStars (StarCount!)

REM Main program follows
INPUT "What is your name: ", UserName$
PRINT "Hello "; UserName$
DO
   INPUT "How many stars do you want: ", NumStars
   CALL PrintSomeStars(NumStars)
   DO
      INPUT "Do you want more stars? ", Answer$
   LOOP UNTIL Answer$ &lt;&gt; ""
   Answer$ = LEFT$(Answer$, 1)
LOOP WHILE UCASE$(Answer$) = "Y"
PRINT "Goodbye "; UserName$
END

REM subroutine definition
SUB PrintSomeStars (StarCount)
   REM This procedure uses a local variable called Stars$
   Stars$ = STRING$(StarCount, "*")
   PRINT Stars$
END SUB
&lt;/syntaxhighlight&gt;

==== Object-oriented BASIC ====
Third-generation BASIC dialects such as [[Visual Basic]], [[Xojo]], [[StarOffice Basic]], [[BlitzMax]] and [[PureBasic]] introduced features to support object-oriented and [[event-driven programming]] paradigm. Most built-in procedures and functions are now represented as ''methods'' of standard objects rather than ''operators''. Also, the [[operating system]] became increasingly accessible to the BASIC language.

The following example is in [[Visual Basic .NET]]:

&lt;!-- needs a better (event-driven?) example --&gt;
&lt;syntaxhighlight lang="vbnet"&gt;
Public Module StarsProgram
   Private Function Ask(prompt As String) As String
      Console.Write(prompt)
      Return Console.ReadLine()
   End Function

   Public Sub Main()
      Dim userName = Ask("What is your name: ")
      Console.WriteLine("Hello {0}", userName)

      Dim answer As String

      Do
         Dim numStars = CInt(Ask("How many stars do you want: "))
         Dim stars As New String("*"c, numStars)
         Console.WriteLine(stars)

         Do
            answer = Ask("Do you want more stars? ")
         Loop Until answer &lt;&gt; ""
      Loop While answer.StartsWith("Y", StringComparison.OrdinalIgnoreCase)

      Console.WriteLine("Goodbye {0}", userName)
   End Sub
End Module
&lt;/syntaxhighlight&gt;

==Standards==
* ANSI/ISO/IEC Standard for Minimal BASIC:
** ANSI X3.60-1978 "For minimal BASIC"
** ISO/IEC 6373:1984 "Data Processing—Programming Languages—Minimal BASIC"
* [[Ecma International|ECMA]]-55 Minimal BASIC ''(withdrawn, similar to ANSI X3.60-1978)''
* ANSI/ISO/IEC Standard for Full BASIC:
** ANSI X3.113-1987 "Programming Languages Full BASIC"
** INCITS/ISO/IEC 10279-1991 (R2005) "Information Technology – Programming Languages – Full BASIC"
* ANSI/ISO/IEC Addendum Defining Modules:
** ANSI X3.113 Interpretations-1992 "BASIC Technical Information Bulletin # 1 Interpretations of ANSI 03.113-1987"
** ISO/IEC 10279:1991/ Amd 1:1994 "Modules and Single Character Input Enhancement"
* [[Ecma International|ECMA]]-116 BASIC ''(withdrawn, similar to ANSI X3.113-1987)''

== See also ==
* [[List of BASIC dialects]]
* [[List of Computers With On-Board BASIC]]

==Notes==
{{notelist}}

==References==
{{Reflist|30em}}

===General references===
{{refbegin}}
* {{Cite book|title=Programming languages: history and fundamentals|last=Sammet|first=Jean E.|date=1969|publisher=[[Prentice-Hall]]|location=Englewood Cliffs, N.J.|language=English|oclc=819683527}}
* {{Cite encyclopedia |chapter-url  = http://doi.acm.org/10.1145/800025.1198404
 |chapter      = BASIC
 |encyclopedia = History of Programming Languages I
 |last         = Kurtz
 |first        = Thomas E.
 |date         = 1981
 |publisher    = [[Association for Computing Machinery|ACM]]
 |isbn         = 978-0127450407
 |doi          = 10.1145/800025.1198404&lt;!-- (currently broken, reported to issuer) --&gt;
 |editor-last  = Wexelblat
 |editor-first = Richard
 |location     = New York
 |pages        = [https://archive.org/details/historyofprogram0000hist/page/515 515–537]
 |ref          = harv
 |title        = History of programming languages
 |url          = https://archive.org/details/historyofprogram0000hist/page/515
}}
* {{Cite book|title=Back To BASIC: The History, Corruption, and Future of the Language|last=Kemeny|first=John G.|last2=Kurtz|first2=Thomas E.|date=1985|publisher=Addison-Wesley |isbn=9780201134339|oclc=11399298|pages=141}}
* {{Cite book|title=The Basic Handbook: Encyclopedia of the BASIC Computer Language|last=Lien|first=David A.|date=1986|publisher=Compusoft Publishing|isbn=9780932760333|oclc=12548310|edition=3rd}}
* {{cite magazine |magazine=Time |date=29 April 2014 |title= Fifty Years of BASIC, the Programming Language That Made Computers Personal |url=http://time.com/69316/basic/ |ref=CITEREFTime2014}}
{{refend}}

==External links==
{{Wikibooks|Programming:BASIC}}
* {{dmoz|Computers/Programming/Languages/BASIC|BASIC}}
* {{HOPL-lang|176|BASIC—Beginners All-purpose Symbolic Instruction Code}}
* {{YouTube|WYPNjSoDrqw|The Birth of Basic}}
&lt;!-- Please do not add any links for specific implementations of BASIC here. Add them to ''[[List of BASIC dialects]]'' and ''[[List of BASIC dialects by platform]]'' instead --&gt;

{{Programming languages}}
{{BASIC}}
{{Authority control}}

{{DEFAULTSORT:Basic}}
[[Category:BASIC programming language family| ]]
[[Category:American inventions]]
[[Category:Articles with example BASIC code]]
[[Category:Programming languages]]
[[Category:Programming languages created in 1964]]
[[Category:Programming languages with an ISO standard]]</text>
      <sha1>ea0bj7aedjhm7zk1sfazhfc8wxf0tpx</sha1>
    </revision>
  </page>
</mediawiki>
