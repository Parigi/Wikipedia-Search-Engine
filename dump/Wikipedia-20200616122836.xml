<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.10/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.10/ http://www.mediawiki.org/xml/export-0.10.xsd" version="0.10" xml:lang="en">
  <siteinfo>
    <sitename>Wikipedia</sitename>
    <dbname>enwiki</dbname>
    <base>https://en.wikipedia.org/wiki/Main_Page</base>
    <generator>MediaWiki 1.35.0-wmf.36</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">Wikipedia</namespace>
      <namespace key="5" case="first-letter">Wikipedia talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="100" case="first-letter">Portal</namespace>
      <namespace key="101" case="first-letter">Portal talk</namespace>
      <namespace key="108" case="first-letter">Book</namespace>
      <namespace key="109" case="first-letter">Book talk</namespace>
      <namespace key="118" case="first-letter">Draft</namespace>
      <namespace key="119" case="first-letter">Draft talk</namespace>
      <namespace key="446" case="first-letter">Education Program</namespace>
      <namespace key="447" case="first-letter">Education Program talk</namespace>
      <namespace key="710" case="first-letter">TimedText</namespace>
      <namespace key="711" case="first-letter">TimedText talk</namespace>
      <namespace key="828" case="first-letter">Module</namespace>
      <namespace key="829" case="first-letter">Module talk</namespace>
      <namespace key="2300" case="first-letter">Gadget</namespace>
      <namespace key="2301" case="first-letter">Gadget talk</namespace>
      <namespace key="2302" case="case-sensitive">Gadget definition</namespace>
      <namespace key="2303" case="case-sensitive">Gadget definition talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Binomial test</title>
    <ns>0</ns>
    <id>935655</id>
    <revision>
      <id>957469722</id>
      <parentid>956130933</parentid>
      <timestamp>2020-05-19T00:59:22Z</timestamp>
      <contributor>
        <username>Cedar101</username>
        <id>374440</id>
      </contributor>
      <minor/>
      <comment>lang="sas", lang="text" : &lt;math&gt;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="8745" xml:space="preserve">{{refimprove|date=November 2016}}
In [[statistics]], the '''binomial test''' is an [[exact test]] of the [[statistical significance]] of deviations from a theoretically expected distribution of observations into two categories.

==Usage==
The binomial test is useful to [[Statistical hypothesis testing|test hypotheses]] about the probability (&lt;math&gt;\pi&lt;/math&gt;) of success:

: &lt;math&gt;H_0:\pi=\pi_0&lt;/math&gt;

where &lt;math&gt;\pi_0&lt;/math&gt; is a user-defined value between 0 and 1.

If in a sample of size &lt;math&gt;n&lt;/math&gt; there are &lt;math&gt;k&lt;/math&gt; successes, while we expect &lt;math&gt;n\pi_0&lt;/math&gt;, the formula of the binomial distribution gives the probability of finding this value:

: &lt;math&gt;Pr(X=k)=\binom{n}{k}p^k(1-p)^{n-k}&lt;/math&gt;

If &lt;math&gt;k&lt;n\pi_0&lt;/math&gt;, we need to find the cumulative probability &lt;math&gt;Pr(X\le k)&lt;/math&gt;, if &lt;math&gt;k&gt;n\pi_0&lt;/math&gt; we need &lt;math&gt;Pr(X\ge k)&lt;/math&gt;. The [[P-value|&lt;math&gt;p&lt;/math&gt;-value]] of the test is then twice this value.

==Common use==
One common use of the binomial test is in the case where the [[null hypothesis]] is that two categories are equally likely to occur (such as a coin toss), implying a null hypothesis &lt;math&gt;H_0:\pi=0.5&lt;/math&gt;. Tables are widely available to give the significance observed numbers of observations in the categories for this case. However, as the example below shows, the binomial test is not restricted to this case.

When there are more than two categories, and an exact test is required, the [[multinomial test]], based on the [[multinomial distribution]], must be used instead of the binomial test.&lt;ref name="Howell"&gt;{{cite book|last1=Howell|first1=David C.|title=Statistical methods for psychology|date=2007|publisher=Thomson|location=Belmont, Calif.|isbn=978-0495012870|edition=6.}}&lt;/ref&gt;

==Large samples==
For large samples such as the example below, the [[binomial distribution]] is well approximated by convenient [[continuous distribution]]s, and these are used as the basis for alternative tests that are much quicker to compute, [[Pearson's chi-squared test]] and the [[G-test]].  However, for small samples these approximations break down, and there is no alternative to the binomial test.

The most usual (and easiest) approximation is through the standard normal distribution, in which a [[z-test]] is performed of the test statistic &lt;math&gt;Z&lt;/math&gt;, given by

: &lt;math&gt;Z=\frac{k-n\pi}{\sqrt{n\pi(1-\pi)}}&lt;/math&gt;

where &lt;math&gt;k&lt;/math&gt; is the number of successes observed in a sample of size &lt;math&gt;n&lt;/math&gt; and &lt;math&gt;\pi&lt;/math&gt; is the probability of success according to the null hypothesis. An improvement on this approximation is possible by introducing a [[continuity correction]]:

: &lt;math&gt;Z=\frac{k-n\pi\pm \frac{1}{2}}{\sqrt{n\pi(1-\pi)}}&lt;/math&gt;

For very large &lt;math&gt;n&lt;/math&gt;, this continuity correction will be unimportant, but for intermediate values, where the exact binomial test doesn't work, it will yield a substantially more accurate result.

==Example binomial test==
Suppose we have a [[board game]] that depends on the roll of one [[dice|die]] and attaches special importance to rolling a 6. In a particular game, the die is rolled 235 times, and 6 comes up 51 times. If the die is fair, we would expect 6 to come up 

: &lt;math&gt;235\times1/6 = 39.17&lt;/math&gt; 

times. We have now observed that the number of 6s is higher than what we would expect on average by pure chance had the die been a fair one. But, is the number significantly high enough for us to conclude anything about the fairness of the die? This question can be answered by the binomial test. Our [[null hypothesis]] would be that the die is fair (probability of each number coming up on the die is 1/6).

To find an answer to this question using the binomial test, we use the [[binomial distribution]] 

: &lt;math&gt;B(N=235, p=1/6)&lt;/math&gt;  with [[Probability mass function|pmf]] &lt;math&gt;f(k,n,p) = \Pr(k;n,p) = \Pr(X = k) = \binom{n}{k}p^k(1-p)^{n-k}&lt;/math&gt; .

As we have observed a value greater than the expected value, we could consider the probability of observing 51 6s or higher under the null, which would constitute a [[One- and two-tailed tests|one-tailed test]] (here we are basically testing whether this die is biased towards generating more 6s than expected). In order to calculate the probability of 51 or more 6s in a sample of 235 under the null hypothesis we add up the probabilities of getting exactly 51 6s, exactly 52 6s, and so on up to probability of getting exactly 235 6s:

: &lt;math&gt;\sum_{i=51}^{235} {235\choose i}p^i(1-p)^{235-i} = 0.02654&lt;/math&gt;

If we have a significance level of 5%, then this result (0.02654 &lt; 5%) indicates that we have evidence that is significant enough to reject the null hypothesis that the die is fair.

Normally, when we are testing for fairness of a die, we are also interested if the die is biased towards generating fewer 6s than expected, and not only more 6s as we considered in the one-tailed test above. In order to consider both the biases, we use a [[One- and two-tailed tests|two-tailed test]]. Note that to do this we cannot simply double the one-tailed p-value unless the probability of the event is 1/2. This is because the binomial distribution becomes asymmetric as that probability deviates from 1/2. There are two methods to define the two-tailed p-value. One method is to sum the probability that the total deviation in numbers of events in either direction from the expected value is either more than or less than the expected value. The probability of that occurring in our example is 0.0437. The second method involves computing the probability that the deviation from the expected value is as unlikely or more unlikely than the observed value, i.e. from a comparison of the probability density functions. This can create a subtle difference, but in this example yields the same probability of 0.0437. In both cases, the two-tailed test reveals significance at the 5% level, indicating that the number of 6s observed was significantly different for this die than the expected number at the 5% level.

==In statistical software packages==
Binomial tests are available in most software used for statistical purposes. E.g.

* In [[R (programming language)|R]] the above example could be calculated with the following code: 
** &lt;syntaxhighlight lang="r" inline&gt;binom.test(51, 235, (1/6), alternative = "less")&lt;/syntaxhighlight&gt; (one-tailed test)
** &lt;syntaxhighlight lang="r" inline&gt;binom.test(51, 235, (1/6), alternative = "greater")&lt;/syntaxhighlight&gt; (one-tailed test)
** &lt;syntaxhighlight lang="r" inline&gt;binom.test(51, 235, (1/6), alternative = "two.sided")&lt;/syntaxhighlight&gt; (two-tailed test)
* In [[SAS (software)|SAS]] the test is available in the Frequency procedure&lt;syntaxhighlight lang="sas"&gt;
PROC FREQ DATA=DiceRoll ;
	TABLES Roll / BINOMIAL (P=0.166667) ALPHA=0.05 ;
	EXACT  BINOMIAL ;
	WEIGHT Freq ;
RUN;
&lt;/syntaxhighlight&gt;
* In [[SPSS]] the test can be utilized through the menu ''Analyze'' &gt; ''Nonparametric test'' &gt; ''Binomial''&lt;syntaxhighlight lang="text"&gt;
 npar tests 
 /binomial (.5) = node1 node2.
&lt;/syntaxhighlight&gt;
* In [[Python (programming language)|Python]], use [[SciPy]]:
** &lt;syntaxhighlight lang="python" inline&gt;scipy.stats.binom_test(51, 235, 1.0/6, alternative='greater')&lt;/syntaxhighlight&gt; (one-tailed test)
** &lt;syntaxhighlight lang="python" inline&gt;scipy.stats.binom_test(51, 235, 1.0/6, alternative='two-sided')&lt;/syntaxhighlight&gt; (two-tailed test)
* In [[MATLAB]], use [http://www.mathworks.com/matlabcentral/fileexchange/24813-binomial-test myBinomTest], which is available via Mathworks' community File Exchange website. myBinomTest will directly calculate the p-value for the observations given the hypothesized probability of a success. &lt;syntaxhighlight lang="matlab" inline&gt;[pout]=myBinomTest(51, 235, 1/6)&lt;/syntaxhighlight&gt; (generally two-tailed, but can optionally perform a one-tailed test).
* In [[Stata]], use bitest.
* In [[Microsoft Excel]], use Binom.Dist. The function takes parameters (Number of successes, Trials, Probability of Success, Cumulative).  The "Cumulative" parameter takes a boolean True or False, with True giving the Cumulative probability of finding this many successes (a left-tailed test), and False the exact probability of finding this many successes.

==See also==
{{wikiversity}}
*[[P-value|''p''-value]]

==References==
{{reflist}}
* {{cite web|title=The binomial test|url=http://www.graphpad.com/guides/prism/6/statistics/index.htm?stat_binomial.htm|website=www.graphpad.com}}

==External links==
* [https://stattrek.com/online-calculator/binomial.aspx Binomial Probability Calculator]

[[Category:Statistical tests]]
[[Category:Articles with example R code]]
[[Category:Articles with example Python code]]
[[Category:Articles with example MATLAB/Octave code]]</text>
      <sha1>97fxrlep25ww2a6qv579pdns75cqyhk</sha1>
    </revision>
  </page>
</mediawiki>
